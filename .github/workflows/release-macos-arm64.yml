name: Build & Release macOS ARM64

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger from GitHub Actions tab

jobs:
  build-and-release:
    runs-on: macos-14  # macOS with ARM64 (Apple Silicon) support
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for versioning

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build unsigned macOS ARM64 (DMG + ZIP)
        run: npm run build-mac-arm64-prod-unsigned
        env:
          SKIP_NOTARIZE: '1'
          ELECTRON_BUILDER_DISABLE_CODE_SIGNING: 'true'
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'

      - name: List built artifacts
        run: |
          echo "📦 Built artifacts:"
          ls -lh dist/

      - name: Prepare release artifacts
        id: artifacts
        run: |
          VERSION="${{ steps.package-version.outputs.version }}"
          cd dist
          
          # Find all artifacts for this version
          ARTIFACTS=$(ls -1 *${VERSION}* 2>/dev/null || true)
          
          if [ -z "$ARTIFACTS" ]; then
            echo "❌ No artifacts found for version $VERSION"
            exit 1
          fi
          
          echo "📦 Release artifacts:"
          echo "$ARTIFACTS"
          
          # Save artifact list for upload
          echo "$ARTIFACTS" > ../artifact-list.txt
          cd ..

      - name: Create or Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.package-version.outputs.tag }}
          name: Release ${{ steps.package-version.outputs.tag }}
          body: |
            ## Hintify ${{ steps.package-version.outputs.version }}
            
            ### 🍎 macOS ARM64 (Apple Silicon)
            
            **Unsigned Build** - This build is not signed or notarized.
            
            #### Installation:
            1. Download the `.dmg` file
            2. Open the DMG and drag Hintify to Applications
            3. Right-click the app and select "Open" (first time only)
            4. Click "Open" in the security dialog
            
            #### What's Included:
            - 📀 DMG installer for easy installation
            - 📦 ZIP archive for portable use
            
            ---
            
            **Platform:** macOS 11+ (Big Sur and later)  
            **Architecture:** ARM64 (Apple Silicon M1/M2/M3)  
            **Built:** ${{ github.event.head_commit.timestamp }}
            **Commit:** ${{ github.sha }}
          draft: false
          prerelease: false
          files: |
            dist/*${{ steps.package-version.outputs.version }}*.dmg
            dist/*${{ steps.package-version.outputs.version }}*.zip
            dist/*${{ steps.package-version.outputs.version }}*.blockmap
            dist/latest-mac.yml
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to workflow
        uses: actions/upload-artifact@v4
        with:
          name: hintify-macos-arm64-${{ steps.package-version.outputs.version }}
          path: |
            dist/*.dmg
            dist/*.zip
            dist/*.blockmap
            dist/*.yml
          retention-days: 30

      - name: Release Summary
        run: |
          echo "✅ Release ${{ steps.package-version.outputs.tag }} published!"
          echo "🔗 View release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.package-version.outputs.tag }}"
          echo ""
          echo "📦 Artifacts uploaded:"
          cat artifact-list.txt

